Description: >
  Buildkite Elastic Stack for AWS ECS

Parameters:
  BuildkiteAgentToken:
    Description: Buildkite agent token
    Type: String
    NoEcho: true
    MinLength: 1

  BuildkiteOrgSlug:
    Description: Buildkite organization slug
    Type: String
    MinLength: 1

  BuildkiteApiAccessToken:
    Description: Buildkite API access token with read_pipelines, read_builds and read_agents (required for metrics)
    Type: String
    NoEcho: true
    MinLength: 1

  BuildkiteQueue:
    Description: Queue name that agents will use, targeted in pipeline steps using "queue={value}"
    Type: String
    Default: default
    MinLength: 1

Mappings:

  # These are the latest ECS optimized AMIs as of August 2017:
  #
  #   amzn-ami-2017.09.d-amazon-ecs-optimized
  #   ECS agent:  1.16.0
  #   Docker:     17.06.2-ce
  #   ecs-init:   1.16.0-1
  #
  # You can find the latest available on this page of our documentation:
  # http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html
  # (note the AMI identifier is region specific)

  AWSRegion:
    us-east-2:
      AMI: ami-58f5db3d
      Zones: 3
    us-east-1:
      AMI: ami-fad25980
      Zones: 6
    us-west-2:
      AMI: ami-7114c909
      Zones: 3
    us-west-1:
      AMI: ami-62e0d802
      Zones: 2
    eu-west-2:
      AMI: ami-dbfee1bf
      Zones: 2
    eu-west-1:
      AMI: ami-4cbe0935
      Zones: 3
    eu-central-1:
      AMI: ami-05991b6a
      Zones: 3
    ap-northeast-2:
      AMI: ami-7267c01c
      Zones: 2
    ap-northeast-1:
      AMI: ami-56bd0030
      Zones: 2
    ap-southeast-2:
      AMI: ami-14b55f76
      Zones: 3
    ap-southeast-1:
      AMI: ami-1bdc8b78
      Zones: 2
    ca-central-1:
      AMI: ami-918b30f5
      Zones: 2

Conditions:
  Has6Zones: !Equals [ !FindInMap [AWSRegion, !Ref "AWS::Region", Zones], "6" ]
  Has3Zones: !Equals [ !FindInMap [AWSRegion, !Ref "AWS::Region", Zones], "3" ]
  Has2Zones: !Equals [ !FindInMap [AWSRegion, !Ref "AWS::Region", Zones], "2" ]

Resources:
  VPCStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: https://s3.amazonaws.com/buildkite-aws-stack-ecs-dev/vpc.yaml

  SpotFleet:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/buildkite-aws-stack-ecs-dev/spotfleet-${AWS::Region}.yaml"
      Parameters:
        VPC: !GetAtt VPCStack.Outputs.VPC
        Subnets: !GetAtt VPCStack.Outputs.PrivateSubnets
        ECSCluster: !Ref ECSCluster
        InstanceAMI: !FindInMap [AWSRegion, !Ref "AWS::Region", AMI]

  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ ecs.amazonaws.com, ecs-tasks.amazonaws.com ]
            Action: sts:AssumeRole
      Path: /

  ECSExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ecsTaskExecutionRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
            Resource: "*"
      Roles:
        - !Ref ECSExecutionRole

  ECSLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 7

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref AWS::StackName

  ECSAgentTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    DependsOn:
     - ECSExecutionRole
     - ECSLogGroup
    Properties:
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ECSExecutionRole
      RequiresCompatibilities:
        - "FARGATE"
      Cpu: 1024
      Memory: 2048
      ContainerDefinitions:
        - Name: buildkite-agent
          Image: "buildkite/agent:3"
          Essential: "true"
          Environment:
            - Name: BUILDKITE_AGENT_TOKEN
              Value: !Ref BuildkiteAgentToken
            - Name: BUILDKITE_AGENT_TAGS
              Value: !Sub "queue=${BuildkiteQueue}"
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
             "awslogs-group": !Ref ECSLogGroup
             "awslogs-region": !Ref AWS::Region
             "awslogs-stream-prefix": "agent"

Outputs:
  Cluster:
    Description: A reference to the ECS cluster
    Value: !Ref ECSCluster

